spring.profiles.active: ${VPROFILE:native}
info:
  application: 
    name: Spring Eureka Config Service
    description: Spring Eureka Config Service
    version: 1.0.0
    management: /actuator
server:
  port: ${VPORT:8761}
  ssl:
    enabled: true
    key-store-type: PKCS12
    key-store: classpath:appx.p12
    key-store-password: appxxppa
    key-alias: appx
  servlet:
    context-path: /
eureka:
  client:
    region: default
    serviceUrl:
      defaultZone: https://${VEUREKAUSER:config}:${VEUREKAPASS:password}@${VEUREKAHOST:eureka.appx.localtest.me}:${VEUREKAPORT:8761}/eureka
    register-with-eureka: false
    fetchRegistry: false
  server:
    enable-replicated-request-compression: false
    peer-eureka-nodes-update-interval-ms: 10000
    renewalPercentThreshold: 0.49
    enableSelfPreservation: true
    waitTimeInMsWhenSyncEmpty: 0

management:
  info:
    env:
      enabled: true
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: '*'

app:
  user-list:
    users:
      - username: admin
        password: p@ssw0rd
        firstName: eureka
        lastName: config
        email: admin@devopsnextgenx.io
        roles:
          - SYSTEM_ADMINISTRATOR
          - ORGANIZATION_ADMINISTRATOR
          - DATA_MANAGER
          - COMPANY_ADMINISTRATOR
          - SERVICE_ACCOUNT
  cloud:
    aws:
      region: us-east-1
      credentialsClass: com.amazonaws.auth.profile.ProfileCredentialsProvider
  modules:
    logging:
      enabled: true
    tracing:
      enabled: false
      jaeger:
        enabled: true
        agent:
          jaegerHost: localhost
          jaegerPort: 6831
        trace:
          samplingRate: 1
          flushInterval: 1000
          maxQueueSize: 1000
    security:
      enabled: true
      secretKey: terces##secret
      encrypted: classpath:encrypted.properties
      basic:
        enabled: true
        api:
          path: /
        user:
          enabled: false
          name: user
          password: password
          role: USER
      jwt:
        enabled: false
        secret: fake-client-secret
        expiration: 3600
        selfSigned:
          enabled: false
          enableController: false

spring:
  datasource:
    url: jdbc:mysql://${VDATABASE:mysql.local.localtest.me}:${VPORT:3306}/${AUTHSCHEMA:${user.name}_auth_db}?createDatabaseIfNotExist=true&autoReconnect=true
    name: authdb
    username: ${VDBUSER:root}
    password: ${VDBPASS:root}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      # ddl-auto: update
      ddl-auto: validate
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
  # sql:
  #   init:
  #     mode: always
  ssl:
    bundle:
      jks:
        web-server:
          key:
            alias: appx
            password: appxxppa
          keystore:
            location: classpath:appx.p12
            password: appxxppa
            type: PKCS12
  application:
    name: appx-oauth-service
  # security:
  #   user:
  #     name: ${VEUREKAUSER:config}     # eureka dashboard user: user | password from console log
  #     password: ${VEUREKAPASS:password} # password can be got from console log
  cloud:
    config:
      discovery:
        enabled: true
      uri: config
      server:
        prefix: /config
        native:
          search-locations: classpath:spring-config-master/
        git:
          uri: ${VGITCONFIGURL:https://github.com/amitkshirsagar13/spring-config.git}

logging:
  level:
    org.springframework.security: DEBUG