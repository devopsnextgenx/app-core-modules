server:
  ssl:
    enabled: true
    key-store-type: PKCS12
    key-store: classpath:appx.p12
    key-store-password: appxxppa
    key-alias: appx
management:
  info:
    env:
      enabled: true
  prometheus:
    metrics:
      export:
        enabled: true
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: '*'
eureka:
  instance:
    instance-id: ${VSERVICENAME:${spring.application.name}}.${VSERVICENAME:${HOSTNAME:appx.localtest.me}}:${spring.application.name}:${spring.application.instance_id:${server.port}}
    health-check-url-path: https://${VSERVICENAME:${spring.application.name}}.${VHOSTNAME:appx.localtest.me}:${server.port}${management.endpoints.web.base-path}/health
    home-page-url: https://${VSERVICENAME:${spring.application.name}}.${VHOSTNAME:appx.localtest.me}:${server.port}/swagger-ui.html
    status-page-url: https://${VSERVICENAME:${spring.application.name}}.${VHOSTNAME:appx.localtest.me}:${server.port}${management.endpoints.web.base-path}/info
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90
    secure-virtual-host-name: ${VSERVICENAME:${spring.application.name}}.${VHOSTNAME:appx.localtest.me}
    hostname: ${VSERVICENAME:${spring.application.name}}.${VHOSTNAME:appx.localtest.me}
    secure-port-enabled: true
    secure-port: ${VSECUREPORT:${server.port}}
    non-secure-port-enabled: false
    non-secure-port: ${VNONSECUREPORT:${server.port}}
    prefer-ip-address: false
  client:
    region: default
    fetch-registry: true
    register-with-eureka: true
    eureka-connection-idle-timeout-seconds: 60
    service-url:
      defaultZone: https://${VEUREKAUSER:admin}:${VEUREKAPASS:p@ssw0rd}@${VEUREKAHOST:eureka.appx.localtest.me}:${VEUREKAPORT:8761}/eureka
    healthcheck:
      enabled: true
    tls:
      enabled: true
      keyStore: classpath:appx.p12
      trustStore: classpath:appx.p12
      keyStoreType: PKCS12
      keyStorePassword: appxxppa
      trustStorePassword: appxxppa
      keyPassword: appxxppa
spring:
  cloud:
    loadbalancer:
      ribbon:
        enabled: false
    config:
      discovery:
        enabled: true
    circuitbreaker:
      hystrix:
        enabled: true
      resilience4j:
        enabled: true
  jackson:
    default-property-inclusion: NON_NULL
  datasource:
    url: jdbc:mysql://${VDATABASE:mysql.local.localtest.me}:${VPORT:3306}/${AUTHSCHEMA:${user.name}_auth_db}?createDatabaseIfNotExist=true&autoReconnect=true
    name: authdb
    username: ${VDBUSER:root}
    password: ${VDBPASS:root}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      # ddl-auto: update
      ddl-auto: validate
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
    show-sql: false
resilience4j:
  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
        recordExceptions:
          - org.springframework.web.client.HttpServerErrorException
          - java.util.concurrent.TimeoutException
          - java.io.IOException
        # ignoreExceptions:
        #   - io.github.robwin.exception.BusinessException
      shared:
        slidingWindowSize: 100
        permittedNumberOfCallsInHalfOpenState: 30
        waitDurationInOpenState: 1s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
  retry:
    configs:
      default:
        maxAttempts: 3
        waitDuration: 100
        retryExceptions:
          - org.springframework.web.client.HttpServerErrorException
          - java.util.concurrent.TimeoutException
          - java.io.IOException
        # ignoreExceptions:
        #   - io.github.robwin.exception.BusinessException
  bulkhead:
    configs:
      default:
        maxConcurrentCalls: 100
  thread-pool-bulkhead:
    configs:
      default:
        maxThreadPoolSize: 4
        coreThreadPoolSize: 2
        queueCapacity: 2
  ratelimiter:
    configs:
      default:
        registerHealthIndicator: false
        limitForPeriod: 10
        limitRefreshPeriod: 1s
        timeoutDuration: 0
        eventConsumerBufferSize: 100
  timelimiter:
    configs:
      default:
        cancelRunningFuture: false
        timeoutDuration: 2s
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 4000
      circuitBreaker:
        requestVolumeThreshold: 4
        errorThresholdPercentage: 50
      metrics:
        rollingStats:
          timeInMilliseconds: 10000
          numBuckets: 10
  threadpool:
    default:
      coreSize: 4
      maxQueueSize: 8
      queueSizeRejectionThreshold: 5


appx:
  cloud:
    aws:
      region: us-east-1
      credentialsClass: com.amazonaws.auth.profile.ProfileCredentialsProvider
  modules:
    logging:
      enabled: true
    monitoring:
      enabled: true
    tracing:
      enabled: true
      jaeger:
        enabled: true
        agent:
          jaegerHost: localhost
          jaegerPort: 6831
        trace:
          samplingRate: 1
          flushInterval: 1000
          maxQueueSize: 1000
    security:
      # jwtSecret: terces##secret
      trustStore:
        location: classpath:appx.jks
        # password: appxxppa
      secretKey: terces##secret
      encrypted: classpath:encrypted.properties
      enabled: true
      dataloader:
        dataLoadFile: ${VAUTHXML:defaultAuth-${spring.profiles.active:local}.xml}
      auth:
        apiV2Audience: ${AUTH_API_V2_AUDIENCE:https://k8cluster.auth0.com/api/v2/}
        callbackUrl: ${AUTH_API_V2_AUDIENCE:http://localhost:4200}
        clientId: ${AUTH_CLIENT_ID:AJn1FDdQtsuolZeU4MIK2O7NbXvjccKN}
        clientSecret: ${AUTH_CLIENT_SECRET:R40JLeatEu6mMUPAA25IyESgAjMmOUqE9LKI9gzWjejksoUJmoiZJaDzqublAFPw}
        domain: ${AUTH_DOMAIN:https://k8cluster.auth0.com}
        issuer: ${AUTH_ISSUER:https://k8cluster.auth0.com/}
      basic:
        enabled: true
        # api:
        #   path: /api/**
        user:
          enabled: true
          name: user
          password: password
          role: USER
      jwt:
        enabled: true
        api:
          path: /api/**
          reqPath: /api/*
        secret: fake-client-secret
        expiration: 3600
        selfSigned:
          enabled: true
          enableController: true
      oauth:
        defaultAuthType: SELFSIGNED
        applications:
          # auth0:
          #   authType: AUTH0
          #   domain: https://devopsnextgenx.auth0.com/
          #   clientId: AJn1FDdQtsuolZeU4MIK2O7NbXvjccKN
          #   clientSecret: R40JLeatEu6mMUPAA25IyESgAjMmOUqE9LKI9gzWjejksoUJmoiZJaDzqublAFPw
          #   audience: AJn1FDdQtsuolZeU4MIK2O7NbXvjccKN
          #   redirectUrl: http://devopsnextgenx.localtest.me
          #   dbConnection: Username-Password-Authentication
          # auth0-v2:
          #   authType: AUTH0
          #   domain: https://devopsnextgenx.auth0.com/
          #   clientId: AJn1FDdQtsuolZeU4MIK2O7NbXvjccKN
          #   clientSecret: R40JLeatEu6mMUPAA25IyESgAjMmOUqE9LKI9gzWjejksoUJmoiZJaDzqublAFPw
          #   audience: https://devopsnextgenx.auth0.com/api/v2/
          self-signed:
            authType: SELFSIGNED
            domain: ${AUTH_DOMAIN:https://devopsnextgenx.localtest.me/}
            clientId: ${AUTH_API_V2_clientId:fake-client-id}
            clientSecret: fake-client-secret
    swagger:
      enabled: true
      users:
        swaggerUser: ${SWAGGER_USER:user}
        swaggerUserPassword: ${SWAGGER_USER_PASS:user}
        swaggerAdmin: ${SWAGGER_ADMIN:admin}
        swaggerAdminPassword: ${SWAGGER_ADMIN_PASS:admin}
    services:
      userServiceHost: http://user-service.appx.localtest.me

# logging:
#   level:
#     ROOT: INFO
    # com.netflix.discovery: DEBUG
    # com.netflix.eureka: DEBUG
    # org.springframework.cloud.netflix.eureka: DEBUG
    # org.springframework.web.client.RestTemplate: DEBUG