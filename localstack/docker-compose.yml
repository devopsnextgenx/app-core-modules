version: '3.6'

services:
  localstack:
    domainname: localhost
    hostname: localhost.localstack.cloud
    image: localstack/localstack:latest
    container_name: localstack
    ports:
      - "4566-4597:4566-4597"
      - "${PORT_WEB_UI-8180}:${PORT_WEB_UI-8080}"
    environment:
      - SERVICES=${LOCALSTACK_SERVICES-kms:4599,dynamodb:4569,s3:4572,sns:4575,sqs:4576}
      - DEBUG=${LOCALSTACK_DEBUG- }
      - DATA_DIR=${LOCALSTACK_DATA_DIR- }
      - PORT_WEB_UI=${LOCALSTACK_PORT_WEB_UI- }
      - LAMBDA_EXECUTOR=${LOCALSTACK_LAMBDA_EXECUTOR- }
      - KINESIS_ERROR_PROBABILITY=${LOCALSTACK_KINESIS_ERROR_PROBABILITY- }
      - DOCKER_HOST=unix:///var/run/docker.sock
      - HOSTNAME_EXTERNAL=localhost.localstack.cloud
      - DEFAULT_REGION=us-east-1
    volumes:
      - "${TMP_DIR:-/tmp}/localstack-data:/var/lib/localstack" # TMP_DIR=/Users/admin/tmp
      - "/var/run/docker.sock:/var/run/docker.sock"

  mysql:
    domainname: localhost
    hostname: mysql.localtest.me
    image: mysql
    container_name: mysql-server
    ports:
    - "3306:3306"
    environment:
    - MYSQL_ROOT_PASSWORD=root
    - MYSQL_DATABASE=user
    - MYSQL_USER=admin
    - MYSQL_PASSWORD=admin
    volumes:
    - "${TMP_DIR:-/tmp}/mysql-data:/var/lib/mysql"

  # mongo:
  #   domainname: localhost
  #   hostname: mongo.localtest.me
  #   image: mongo
  #   container_name: mongo-server
  #   ports:
  #     - "27017:27017"
  #   environment:
  #     - MONGO_INITDB_ROOT_USERNAME=admin
  #     - MONGO_INITDB_ROOT_PASSWORD=password
  #     - MONGO_USERNAME=admin
  #     - MONGO_PASSWORD=password

  # redis:
  #   domainname: localhost
  #   hostname: redis
  #   image: redis:4.0.2
  #   container_name: redis-server
  #   ports:
  #     - "6379:6379"
  #   environment:
  #     - ALLOW_EMPTY_PASSWORD=yes
  #   volumes:
  #     - "${TMP_DIR:-/tmp}/bitnami/redis/data:/bitnami/redis/data"
  #   command: [
  #     "bash", "-c",
  #     '
  #       docker-entrypoint.sh
  #       --requirepass "redis"
  #     '
  #   ]

  # vault:
  #   domainname: localhost
  #   hostname: vault.localtest.me
  #   image: vault:1.13.3
  #   container_name: vault-server
  #   ports:
  #     - "8200:8200"
  #   volumes:
  #     - "${TMP_DIR:-/tmp}/vault/policies:/vault/policies"
  #     - "${TMP_DIR:-/tmp}/vault-data:/vault/data"
  #     - "${TMP_DIR:-/tmp}/vault/logs:/vault/logs"
  #   environment:
  #     - VAULT_ADDR=http://0.0.0.0:8200
  #     - VAULT_TOKEN=00000000-0000-0000-0000-000000000000
  #   command: server --dev --dev-root-token-id="00000000-0000-0000-0000-000000000000"
  #   cap_add:
  #     - IPC_LOCK
  #   depends_on:
  #     - consul

  # consul:
  #   domainname: localhost
  #   hostname: consul.localtest.me
  #   image: amitkshirsagar13/consul
  #   container_name: consul-server
  #   ports:
  #     - 8500:8500
  #   command: agent -server -bind 0.0.0.0 -client 0.0.0.0 -bootstrap-expect 1 -config-file=/consul/config/config.json
  #   volumes:
  #     - ./consul/config/consul-config.json:/consul/config/config.json
  #     - "${TMP_DIR:-/tmp}/consul-data:/consul/data"

#
#  test-module1:
#    domainname: localhost
#    hostname: test-module1
#    image: amitkshirsagar13/test-module
#    container_name: "test-module1"
#    ports:
#      - 2001:2000
#    environment:
#      - spring.profiles.active=dev
#      - ENVPREFIX=dev1
#      - VAULT_TOKEN=00000000-0000-0000-0000-000000000000
#      - aws.accessKeyId=AKIAIOSFODNN7EXAMPLE
#      - aws.secretKey=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
#      - AWS_ACCESS_KEY_ID=foobar
#      - AWS_SECRET_ACCESS_KEY=foobar
#      - SQS_ENDPOINT=http://localstack:4576
#      - VAULTHOST=vault
#      - CONSULHOST=consul
#      - REDISHOST=redis
#    depends_on:
#      - vault
#      - localstack
#      - redis
#    links:
#      - "localstack:localstack"
#      - "redis:redis"
#      - "consul:consul"
#      - "vault:vault"
#
#  test-module2:
#    domainname: localhost
#    hostname: test-module2
#    image: amitkshirsagar13/test-module
#    container_name: "test-module2"
#    ports:
#      - 2002:2000
#    environment:
#      - spring.profiles.active=dev
#      - ENVPREFIX=dev2
#      - VAULT_TOKEN=00000000-0000-0000-0000-000000000000
#      - aws.accessKeyId=AKIAIOSFODNN7EXAMPLE
#      - aws.secretKey=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
#      - AWS_ACCESS_KEY_ID=foobar
#      - AWS_SECRET_ACCESS_KEY=foobar
#      - SQS_ENDPOINT=http://localstack:4576
#      - VAULTHOST=vault
#      - CONSULHOST=consul
#      - REDISHOST=redis
#    depends_on:
#      - vault
#      - localstack
#      - redis
#    links:
#      - "localstack:localstack"
#      - "redis:redis"
#      - "consul:consul"
#      - "vault:vault"